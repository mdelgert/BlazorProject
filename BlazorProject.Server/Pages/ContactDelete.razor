@page "/contact/delete/{contactId:int}"
@using BlazorProject.Shared.Models
@using BlazorProject.Shared.Services
@using BlazorProject.Shared
@inject IContactService _contactService
@inject NavigationManager NavigationManager

<h2>Delete Contact</h2>
<br />

<div class="form-group">
    <h4>Do you want to delete this contact?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>First Name</td>
                <td>@contact.FirstName</td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td>@contact.LastName</td>
            </tr>
            <tr>
                <td>Address</td>
                <td>@contact.Address</td>
            </tr>
            <tr>
                <td>City</td>
                <td>@contact.City</td>
            </tr>
            <tr>
                <td>State</td>
                <td>@contact.State</td>
            </tr>
            <tr>
                <td>ZipCode</td>
                <td>@contact.ZipCode</td>
            </tr>
            <tr>
                <td>Phone Number</td>
                <td>@contact.PhoneNumber</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveContact(contact.ContactId))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>

@code {
    [Parameter]
    public int contactId { get; set; }
    Contact? contact = new Contact();

    protected override async Task OnInitializedAsync()
    {
        contact = await _contactService.FindById(contactId);
    }

    protected async Task RemoveContact(int contactId)
    {
        await _contactService.Delete(contactId);
        NavigationManager.NavigateTo("/contactlist");
    }
    
    void Cancel()
    {
        NavigationManager.NavigateTo("/contactlist");
    }
}